// <auto-generated />
using System;
using LevelLearn.Infra.EFCore.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LevelLearn.Infra.EFCore.Migrations
{
    [DbContext(typeof(LevelLearnContext))]
    partial class LevelLearnContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LevelLearn.Domain.Entities.Institucional.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituicaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePesquisa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Institucional.Instituicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NomePesquisa")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("NomePesquisa");

                    b.ToTable("Instituicoes");
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Pessoas.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NomePesquisa")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("NomePesquisa");

                    b.ToTable("Pessoas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Pessoas.PessoaCurso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("PessoaCurso");
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Pessoas.PessoaInstituicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstituicaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("PessoaInstituicao");
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Pessoas.Aluno", b =>
                {
                    b.HasBaseType("LevelLearn.Domain.Entities.Pessoas.Pessoa");

                    b.Property<string>("RA")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Aluno");
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Pessoas.Professor", b =>
                {
                    b.HasBaseType("LevelLearn.Domain.Entities.Pessoas.Pessoa");

                    b.HasDiscriminator().HasValue("Professor");
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Institucional.Curso", b =>
                {
                    b.HasOne("LevelLearn.Domain.Entities.Institucional.Instituicao", "Instituicao")
                        .WithMany("Cursos")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Pessoas.Pessoa", b =>
                {
                    b.OwnsOne("LevelLearn.Domain.ValueObjects.CPF", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("PessoaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("CPF")
                                .HasColumnType("varchar(11)");

                            b1.HasKey("PessoaId");

                            b1.ToTable("Pessoas");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.OwnsOne("LevelLearn.Domain.ValueObjects.Celular", "Celular", b1 =>
                        {
                            b1.Property<Guid>("PessoaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CellPhoneNumber")
                                .IsRequired()
                                .HasColumnName("Celular")
                                .HasColumnType("varchar(14)");

                            b1.HasKey("PessoaId");

                            b1.ToTable("Pessoas");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.OwnsOne("LevelLearn.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("PessoaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(190)");

                            b1.HasKey("PessoaId");

                            b1.ToTable("Pessoas");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Pessoas.PessoaCurso", b =>
                {
                    b.HasOne("LevelLearn.Domain.Entities.Institucional.Curso", "Curso")
                        .WithMany("Pessoas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LevelLearn.Domain.Entities.Pessoas.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("LevelLearn.Domain.Entities.Pessoas.PessoaInstituicao", b =>
                {
                    b.HasOne("LevelLearn.Domain.Entities.Institucional.Instituicao", "Instituicao")
                        .WithMany("Pessoas")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LevelLearn.Domain.Entities.Pessoas.Pessoa", "Pessoa")
                        .WithMany("Instituicoes")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
