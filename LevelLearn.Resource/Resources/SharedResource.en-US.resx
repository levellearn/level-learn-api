<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlunoRAObrigatorio" xml:space="preserve">
    <value>RA needs to be filled</value>
  </data>
  <data name="AtualizadoSucesso" xml:space="preserve">
    <value>Updated successfully</value>
  </data>
  <data name="CadastradoSucesso" xml:space="preserve">
    <value>Registered successfully</value>
  </data>
  <data name="CPFJaExiste" xml:space="preserve">
    <value>CPF already exists</value>
  </data>
  <data name="DadosInvalidos" xml:space="preserve">
    <value>Invalid data</value>
  </data>
  <data name="DeletadoSucesso" xml:space="preserve">
    <value>Deleted successfully</value>
  </data>
  <data name="ErroInternoServidor" xml:space="preserve">
    <value>Oops, an error occurred in the system!</value>
  </data>
  <data name="FalhaAtualizar" xml:space="preserve">
    <value>Failed to update</value>
  </data>
  <data name="FalhaCadastrar" xml:space="preserve">
    <value>Failed to register</value>
  </data>
  <data name="FalhaDeletar" xml:space="preserve">
    <value>Failed to delete</value>
  </data>
  <data name="InstituicaoDescricaoObrigatorio" xml:space="preserve">
    <value>Description must be filled</value>
  </data>
  <data name="InstituicaoDescricaoTamanho" xml:space="preserve">
    <value>Description can have a maximum of {0} characters</value>
  </data>
  <data name="InstituicaoJaExiste" xml:space="preserve">
    <value>Institution already exists</value>
  </data>
  <data name="InstituicaoNaoEncontrada" xml:space="preserve">
    <value>Institution does not exist</value>
  </data>
  <data name="InstituicaoNaoPermitida" xml:space="preserve">
    <value>You are not the Administrator of this institution</value>
  </data>
  <data name="InstituicaoNomeObrigatorio" xml:space="preserve">
    <value>Name must be filled</value>
  </data>
  <data name="InstituicaoNomeTamanho" xml:space="preserve">
    <value>Name must be between {0} and {1} characters</value>
  </data>
  <data name="NaoEncontrado" xml:space="preserve">
    <value>Register not found</value>
  </data>
  <data name="PessoaCelularInvalido" xml:space="preserve">
    <value>Cell is not valid</value>
  </data>
  <data name="PessoaCPFInvalido" xml:space="preserve">
    <value>CPF is not valid</value>
  </data>
  <data name="PessoaDataNascimentoInvalida" xml:space="preserve">
    <value>Birth Date must be less than today</value>
  </data>
  <data name="PessoaGeneroObrigatorio" xml:space="preserve">
    <value>Gender must be filled</value>
  </data>
  <data name="PessoaImagemObrigatoria" xml:space="preserve">
    <value>Image must be filled</value>
  </data>
  <data name="PessoaNickNameInvalido" xml:space="preserve">
    <value>NickName must only contain letters, numbers, dash (_), hyphen (-) and dot (.)</value>
  </data>
  <data name="PessoaNickNameObrigatorio" xml:space="preserve">
    <value>NickName must be filled</value>
  </data>
  <data name="PessoaNickNameTamanhoMaximo" xml:space="preserve">
    <value>NickName can be a maximum of {0} characters</value>
  </data>
  <data name="PessoaNomeObrigatorio" xml:space="preserve">
    <value>Name must be filled</value>
  </data>
  <data name="PessoaNomePrecisaSobrenome" xml:space="preserve">
    <value>First name needs a surname</value>
  </data>
  <data name="PessoaNomeTamanho" xml:space="preserve">
    <value>Name must be between {0} and {1} characters</value>
  </data>
  <data name="PessoaTipoPessoaInvalido" xml:space="preserve">
    <value>Type of person needs to be Admin, Teacher or Student</value>
  </data>
  <data name="ProfessorCPFObrigatorio" xml:space="preserve">
    <value>CPF needs to be filled</value>
  </data>
  <data name="UsuarioConfirmacaoSenhaNaoConfere" xml:space="preserve">
    <value>Password and password confirmation do not match</value>
  </data>
  <data name="UsuarioConfirmacaoSenhaObrigatoria" xml:space="preserve">
    <value>Password confirmation must be completed</value>
  </data>
  <data name="UsuarioContaBloqueada" xml:space="preserve">
    <value>Your account is blocked</value>
  </data>
  <data name="UsuarioEmailConfirmarFalha" xml:space="preserve">
    <value>E-mail cannot be confirmed</value>
  </data>
  <data name="UsuarioEmailConfirmarSucesso" xml:space="preserve">
    <value>E-mail successfully confirmed</value>
  </data>
  <data name="UsuarioEmailInvalido" xml:space="preserve">
    <value>Email is not valid</value>
  </data>
  <data name="UsuarioEmailJaExiste" xml:space="preserve">
    <value>E-mail already exists</value>
  </data>
  <data name="UsuarioEmailNaoConfirmado" xml:space="preserve">
    <value>E-mail is not confirmed</value>
  </data>
  <data name="UsuarioEmailTamanhoMaximo" xml:space="preserve">
    <value>E-mail can be a maximum of {0} characters</value>
  </data>
  <data name="UsuarioLoginFalha" xml:space="preserve">
    <value>Invalid username and / or password</value>
  </data>
  <data name="UsuarioLoginSucesso" xml:space="preserve">
    <value>Login successfully</value>
  </data>
  <data name="UsuarioLogoutSucesso" xml:space="preserve">
    <value>Logout successfully</value>
  </data>
  <data name="UsuarioSenhaObrigatoria" xml:space="preserve">
    <value>Password must be filled</value>
  </data>
  <data name="UsuarioSenhaRequerDigito" xml:space="preserve">
    <value>Password needs at least one digit</value>
  </data>
  <data name="UsuarioSenhaRequerEspecial" xml:space="preserve">
    <value>Password needs at least one special character</value>
  </data>
  <data name="UsuarioSenhaRequerMaiusculo" xml:space="preserve">
    <value>Password needs at least one uppercase letter</value>
  </data>
  <data name="UsuarioSenhaRequerMinusculo" xml:space="preserve">
    <value>Password needs at least one lowercase letter</value>
  </data>
  <data name="UsuarioSenhaTamanho" xml:space="preserve">
    <value>Password must be between {0} and {1} characters</value>
  </data>
</root>